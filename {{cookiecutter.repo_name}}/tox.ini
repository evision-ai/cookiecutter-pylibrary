[testenv:bootstrap]
deps =
    jinja2
    matrix
    tox
skip_install = true
commands =
    python ci/bootstrap.py --no-env
passenv =
    *
{% if cookiecutter.test_matrix_configurator == "yes" %}
basepython =
    python
{% endif %}

{%- if cookiecutter.test_matrix_configurator == "yes" -%}
; this is just a bootstrap tox configuration, run tox or ./ci/bootstrap.py to have the full tox.ini

[tox]
envlist = bootstrap

{%- else -%}
; a generative tox configuration, see: https://tox.readthedocs.io/en/latest/config.html#generative-envlist

[tox]
envlist =
    clean,
    check,
{%- if cookiecutter.sphinx_docs == "yes" %}
    docs,
{%- endif %}
    {py27,py3,pypy,pypy3}{% if cookiecutter.test_matrix_separate_coverage == 'yes' %}-{cover,nocov}{% endif %},
    report
ignore_basepython_conflict = true

[testenv]
{%- if cookiecutter.c_extension_test_pypi == 'yes' %}
wheel = true
{%- endif %}
basepython =
    pypy: {env:TOXPYTHON:pypy}
    pypy3: {env:TOXPYTHON:pypy3}
    py27: {env:TOXPYTHON:python2.7}
    {% if cookiecutter.sphinx_docs == "yes" %}{py3,docs,spell}{% else %}py3{% endif %}: {env:TOXPYTHON:python3}
    {bootstrap,clean,check,report: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
{%- if cookiecutter.test_matrix_separate_coverage == 'yes' %}
usedevelop =
    cover: true
    nocov: false
{%- else %}
usedevelop = false
{%- endif %}
deps =
    pytest
    {% if cookiecutter.test_matrix_separate_coverage == 'yes' %}cover: {% endif %}pytest-cov
commands =
{%- if cookiecutter.c_extension_support != "no" %}
    {%- if cookiecutter.test_matrix_separate_coverage == 'yes' %}
    cover: python setup.py clean --all build_ext --force --inplace
    {%- endif %}
{%- endif %}
    {%- if cookiecutter.test_matrix_separate_coverage == 'yes' %}
    nocov: {posargs:pytest -vv --ignore=src}
    cover: {posargs:pytest --cov --cov-report=term-missing -vv}
    {%- else %}
    {posargs:pytest --cov --cov-report=term-missing -vv}
    {%- endif %}

[testenv:check]
deps =
    docutils
{%- if cookiecutter.linter == "flake8" %}
    flake8
{%- else %}
    pylama
{%- endif %}
    readme-renderer
    pygments
    isort
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
{%- if cookiecutter.linter == "flake8" %}
    flake8 src tests setup.py
{%- else %}
    pylama src tests setup.py
{%- endif %}
    isort --verbose --check-only --diff --recursive src tests setup.py

{%- if cookiecutter.sphinx_docs == "yes" %}

[testenv:spell]
setenv =
    SPELLCHECK=1
commands =
    sphinx-build -b spelling docs dist/docs
skip_install = true
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:docs]
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
{%- if cookiecutter.sphinx_doctest == "yes" %}
    sphinx-build {posargs:-E} -b doctest docs dist/docs
{%- endif %}
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs
{%- endif %}

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage
{%- endif %}
{%- if cookiecutter.c_extension_support == 'cython' %}

[testenv:cythonize]
basepython = {env:TOXPYTHON:python}
deps =
    Cython
skip_install = true
commands =
    python setup.py build
{%- endif %}
